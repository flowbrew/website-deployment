#!/bin/bash

BUILDPARAMS=""
RUNPARAMS=""
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

if [ "$1" = "local" ]; then
    LOCAL_RUN=True
    DOCKERNAME="flowbrewlocal:${BRANCH_NAME}"
else
    LOCAL_RUN=False
    DOCKERNAME="ntoss/builder:${BRANCH_NAME}"
    
    echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin

    if docker pull ${DOCKERNAME} 2>/dev/null; then
        BUILDPARAMS="$BUILDPARAMS --cache-from ${DOCKERNAME}"
    fi
fi

DOCKER_COMMAND=$(cat <<-EOF

export AWS_ACCESS_KEY_ID='${AWS_ACCESS_KEY_ID}'
export AWS_SECRET_ACCESS_KEY='${AWS_SECRET_ACCESS_KEY}'
export GITHUB_WEBSITE_USERNAME='${GITHUB_WEBSITE_USERNAME}'
export GITHUB_WEBSITE_TOKEN='${GITHUB_WEBSITE_TOKEN}'
export SLACK_BOT_TOKEN='${SLACK_BOT_TOKEN}'
export TINIFY_KEY='${TINIFY_KEY}'
export GOOGLE_PAGESPEED_KEY='${GOOGLE_PAGESPEED_KEY}'
export YANDEX_BOT_EMAIL='${YANDEX_BOT_EMAIL}'
export YANDEX_BOT_TOKEN='${YANDEX_BOT_TOKEN}'
export GOOGLE_ANALYTICS='${GOOGLE_ANALYTICS}'

git config --global user.email "action@flowbrew.ru"
git config --global user.name "GitHub Action"
pip install ./pybrew
python -c "$(cat <<-PYEOF

# ----- 

import os
from pybrew import cicd_io

cicd_io(
    local_run=${LOCAL_RUN},
    workflow='$1',
    event_name='$2',
    repo_path='./',
    deployment_repo='website-deployment',
    test_deployment_repo='test-website-deployment',   
    ref_branch='$3',
    )

# ----- 

PYEOF
)"
EOF
)

if docker build ${BUILDPARAMS} -t "$DOCKERNAME" .
then
    echo docker built sucessfully
else
    echo ERROR: cant build docker
    exit 1
fi

if [ "$1" != "local" ]; then
    docker push "$DOCKERNAME"
fi

docker rm -f cicd
docker run -t --rm --name cicd \
    ${RUNPARAMS} \
    -v "$PWD":/local_website \
    -p 127.0.0.1:4000:4000 \
    "$DOCKERNAME" bash -c "$DOCKER_COMMAND"
