#!/bin/bash

BUILDPARAMS=""
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

if [ "$1" = "local" ]; then
    LOCAL_RUN=True
    DOCKERNAME="flowbrewlocal:${BRANCH_NAME}"
else
    LOCAL_RUN=False
    DOCKERNAME="ntoss/builder:${BRANCH_NAME}"
    
    echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin

    if docker pull ${DOCKERNAME} 2>/dev/null; then
        BUILDPARAMS="$BUILDPARAMS --cache-from ${DOCKERNAME}"
    fi
fi

DOCKER_COMMAND=$(cat <<-EOF
git config --global user.email "action@flowbrew.ru"
git config --global user.name "GitHub Action"
pip install ./pybrew
python -W ignore::DeprecationWarning -c "$(cat <<-PYEOF

# ----- 

import os
from pybrew import cicd_io

cicd_io(
    local_run=${LOCAL_RUN},
    workflow='$1',
    event_name='$2',

    github_username='${GITHUB_WEBSITE_USERNAME}',
    github_token='${GITHUB_WEBSITE_TOKEN}',

    slack_token='${SLACK_BOT_TOKEN}',
    tinify_key='${TINIFY_KEY}',

    repo_path='./',

    deployment_repo='website-deployment',
    test_deployment_repo='test-website-deployment',
    
    ref_branch='$3',
    )

# ----- 

PYEOF
)"
EOF
)

docker build ${BUILDPARAMS} -t "$DOCKERNAME" .

if [ "$1" != "local" ]; then
    docker push "$DOCKERNAME"
fi

docker run --rm --name cicd \
    -v "$PWD":/usr/src/website \
    -w /usr/src/website \
    "$DOCKERNAME" bash -c "$DOCKER_COMMAND"
